[{"/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/index.tsx":"1","/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/App.tsx":"2","/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/newMovie.tsx":"3","/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/Home.tsx":"4","/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/MoviesDetails.tsx":"5","/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/Navbar.tsx":"6","/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/edit.tsx":"7"},{"size":200,"mtime":1699810569558,"results":"8","hashOfConfig":"9"},{"size":831,"mtime":1699811840293,"results":"10","hashOfConfig":"9"},{"size":2775,"mtime":1699573889690,"results":"11","hashOfConfig":"9"},{"size":1544,"mtime":1699573889689,"results":"12","hashOfConfig":"9"},{"size":1726,"mtime":1699573889689,"results":"13","hashOfConfig":"9"},{"size":789,"mtime":1699573889689,"results":"14","hashOfConfig":"9"},{"size":3482,"mtime":1699573889690,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vq9h8s",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},"/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/index.tsx",[],"/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/App.tsx",[],"/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/newMovie.tsx",[],["34","35"],"/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/Home.tsx",["36"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nfunction Home() {\n  const history = useHistory();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/movies');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const resData = await response.json();\n        setMovies(resData);\n        setLoading(false);\n      } catch (err) {\n        setError(err);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  let moviesFormatted = null;\n\n  if (loading) {\n    moviesFormatted = <p>Loading...</p>;\n  } else if (error) {\n    moviesFormatted = <p>Error: {error.message}</p>;\n  } else {\n    moviesFormatted = movies.map((movie) => (\n      <div className=\"col-sm-6\" key={movie._id}>\n        <h2>\n          <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n        </h2>\n        <p className=\"text\">{movie.rated}</p>\n        <img style={{ width: '200px' }} src={movie.pic} alt={movie.title} />\n        <p className=\"text\">\n          Rated {movie.rated}, {movie.duration} Minutes\n        </p>\n      </div>\n    ));\n  }\n\n  \n\n  return (\n    <main>\n      <h1>Modern Movie Portal -HOME</h1>\n      <div className=\"row\">{moviesFormatted}</div>\n    </main>\n  );\n}\n\nexport default Home;\n","/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/MoviesDetails.tsx",[],"/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/Navbar.tsx",["37","38","39"],"import React from 'react';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nfunction AppNavbar() {\n  return (\n\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <link rel=\"stylesheet\" href=\"../../public/style.css\" />\n      <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\"></link>\n\n\n      <Navbar.Brand as={Link} to=\"/\">Modern Movie Portal</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n        <Nav.Link as={Link} to=\"/movies/new\">Add Movie</Nav.Link>\n\n      </Nav>\n    \n    </Navbar>\n  )\n}\n\nexport default AppNavbar","/Users/jayaramkumar/Desktop/advtopics/Milestone-Project-2/frontend/src/components/edit.tsx",["40"],"import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nfunction EditMovie() {\n  const { id } = useParams();\n  const history = useHistory();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Edit state\n  const [editedMovie, setEditedMovie] = useState({\n    title: '',\n    rated: '',\n    pic: '',\n    duration: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/movies/${id}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const resData = await response.json();\n        setMovie(resData);\n        setEditedMovie(resData); \n        setLoading(false);\n      } catch (err) {\n        setError(err);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\nconst handleEditSubmit = async () => {\n    try {\n      const response = await fetch(`http://localhost:5001/movies/${id}`, {\n        method: 'PUT', \n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(editedMovie),\n      });\n\n      if (response.ok) {\n        \n        history.push(`/movies/${id}`);\n      } else {\n        throw new Error('Failed to edit movie');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleEditInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditedMovie({ ...editedMovie, [name]: value });\n  };\n\nreturn (\n    <div>\n    <h1>Edit Movie</h1>\n    {loading ? (\n      <p>Loading...</p>\n    ) : error ? (\n      <p>Error: {error.message}</p>\n    ) : (\n      <div>\n        <form onSubmit={handleEditSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Movie Title</label>\n            <input\n              required\n              value={editedMovie.title}\n              onChange={handleEditInputChange}\n              className=\"form-control\"\n              id=\"title\"\n              name=\"title\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n              <label htmlFor=\"rated\">Rated</label>\n              <input\n                required\n                value={editedMovie.rated}\n                onChange={handleEditInputChange}\n                className=\"form-control\"\n                id=\"rated\"\n                name=\"rated\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"pic\">Movie Picture</label>\n              <input\n                value={editedMovie.pic}\n                onChange={handleEditInputChange}\n                className=\"form-control\"\n                id=\"pic\"\n                name=\"pic\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"duration\">Duration</label>\n              <input\n                value={editedMovie.duration}\n                onChange={handleEditInputChange}\n                className=\"form-control\"\n                id=\"duration\"\n                name=\"duration\"\n              />\n            </div>\n            <input\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              value=\"Edit Movie\"\n            />\n          </form>\n         \n          <button onClick={() => history.goBack()}>Go Back</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default EditMovie;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":6,"column":9,"nodeType":"47","messageId":"48","endLine":6,"endColumn":16},{"ruleId":"45","severity":1,"message":"49","line":2,"column":23,"nodeType":"47","messageId":"48","endLine":2,"endColumn":27},{"ruleId":"45","severity":1,"message":"50","line":2,"column":29,"nodeType":"47","messageId":"48","endLine":2,"endColumn":40},{"ruleId":"45","severity":1,"message":"51","line":2,"column":42,"nodeType":"47","messageId":"48","endLine":2,"endColumn":48},{"ruleId":"45","severity":1,"message":"52","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":15},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'movie' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]