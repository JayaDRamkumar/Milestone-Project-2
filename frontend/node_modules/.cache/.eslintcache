[{"/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/index.js":"1","/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/App.js":"2","/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/Home.jsx":"3","/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/Navbar.jsx":"4","/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/movie.jsx":"5","/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/newMovie.jsx":"6","/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/addReview.jsx":"7"},{"size":289,"mtime":1695166118558,"results":"8","hashOfConfig":"9"},{"size":1325,"mtime":1695178660554,"results":"10","hashOfConfig":"9"},{"size":1139,"mtime":1695172468424,"results":"11","hashOfConfig":"9"},{"size":937,"mtime":1695178686655,"results":"12","hashOfConfig":"9"},{"size":932,"mtime":1695176260269,"results":"13","hashOfConfig":"9"},{"size":2793,"mtime":1695172507276,"results":"14","hashOfConfig":"9"},{"size":3542,"mtime":1695172493367,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6ue4fw",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},"/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/index.js",[],["34","35"],"/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/App.js",["36","37"],"/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/Home.jsx",["38"],"import { useEffect, useState } from 'react'\nimport { useHistory } from \"react-router\";\n\nfunction Home () {\n\n  const history = useHistory()\n  const [movies, setMovies] = useState([])\n\n  useEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst response = await fetch(`http://localhost:5001/movies`)\n\t\t\tconst resData = await response.json()\n      console.log(resData)\n\t\t\tsetMovies(resData)\n\t\t}\n\t\tfetchData()\n\t}, [])\n\n    let moviesFormatted = movies.map((movie) => {\n      return (\n        <div className=\"col-sm-6\" key={movie._id}>\n          <h2>\n            <a href=\"#\" onClick={() => history.push(`/movies/${movie._id}`)} >\n              {movie.title}\n            </a>\n          </h2>\n          <p className=\"text-center\">\n            {movie.rated}\n          </p>\n          <img style={{ width: '200px' }} src={movie.pic} alt={movie.title} />\n          <p className=\"text-center\">\n            Rated {movie.rated}, {movie.duration} Minutes\n          </p>\n        </div>\n      )\n    })\n  return (\n    <main>\n\t\t\t<h1>Modern Movie Portal</h1>\n\t\t\t<div className=\"row\">\n\t\t\t\t{moviesFormatted}\n\t\t\t</div>\n\t\t</main>\n  )\n}\n\n\nexport default Home;\n\n","/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/Navbar.jsx",[],"/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/movie.jsx",[],["39","40"],"/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/newMovie.jsx",["41","42","43"],"/Users/jayaramkumar/Desktop/2Milestone/Milestone-Project-2/frontend/src/components/addReview.jsx",["44"],"const React = require('react')\nconst Def = require('./default')\n\nimport { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router\"\n\n\nfunction AddReview({ movies, onSubmit }) {\n\n    const [movies, setMovies] = useState([])\n\n    const [review, setReview] = useState({\n        content: '',\n        stars: 3,\n        review: false,\n        authorId: ''\n    })\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(`http://localhost:5001/movies`)\n            const users = await response.json()\n            setComment({ ...comment, authorId: users[0]?.userId})\n            setAuthors(users)\n        }\n        fetchData()\n    }, [])\n\n    let authorOptions = authors.map(author => {\n        return <option key={author.userId} value={author.userId}>{author.firstName} {author.lastName}</option>\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        onSubmit(review)\n        setReview({\n            content: '',\n            stars: 3,\n            review: false,\n            authorId: authors[0]?.userId\n        })\n    }\n \n    return (\n        \n                     <form onSubmit={handleSubmit}>\n                            <div className=\"row\">\n                                <div className=\"form-group col-sm-12\">\n                                    <label htmlFor=\"content\">Content</label>\n                                    <textarea\n                                        required\n                                        value={review.content}\n                                        onChange={e => setReview({ ...review, content: e.target.value })}\n                                        className=\"form-control\"\n                                        id=\"content\"\n                                        name=\"content\"\n                                    />\n                                </div>\n                             </div>\n            <div className=\"row\">\n                <div className=\"form-group col-sm-4\">\n                    <label htmlFor=\"state\">Author</label>\n                    <select className=\"form-control\" value={review.authorId} onChange={e => setReview({ ...review, authorId: e.target.value })}>\n                        {authorOptions}\n                    </select>\n                </div>\n                <div className=\"form-group col-sm-4\">\n                    <label htmlFor=\"stars\">Star Rating</label>\n                    <input\n                        value={review.stars}\n                        onChange={e => setReview({ ...review, stars: e.target.value })}\n                        type=\"range\"\n                        step=\"0.5\"\n                        min=\"1\"\n                        max=\"5\"\n                        id=\"stars\"\n                        name=\"stars\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group col-sm-4\">\n                    <label htmlFor=\"review\">Review</label>\n                    <input\n                        checked={movie.review}\n                        onClick={e => setReview({ ...review, review: e.target.checked })}\n                        type=\"checkbox\"\n                        id=\"review\"\n                        name=\"review\"\n                        className=\"form-control\"\n                    />\n                </div>\n                </div>\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Add Review\" />\n        \n        </form>\n\n    )\n}\n\nmodule.exports = newReview",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":12,"column":18,"nodeType":"51","messageId":"52","endLine":14,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":14,"column":54,"nodeType":"51","messageId":"52","endLine":16,"endColumn":11},{"ruleId":"53","severity":1,"message":"54","line":23,"column":13,"nodeType":"55","endLine":23,"endColumn":79},{"ruleId":"45","replacedBy":"56"},{"ruleId":"47","replacedBy":"57"},{"ruleId":"58","severity":2,"message":"59","line":6,"column":21,"nodeType":"60","endLine":6,"endColumn":31},{"ruleId":"58","severity":2,"message":"61","line":7,"column":30,"nodeType":"60","endLine":7,"endColumn":38},{"ruleId":"62","severity":2,"message":"63","line":28,"column":10,"nodeType":"64","messageId":"65","endLine":28,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"66","line":8,"column":22},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["67"],["68"],"react-hooks/rules-of-hooks","React Hook \"useHistory\" is called in function \"newMovieForm\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Identifier","React Hook \"useState\" is called in function \"newMovieForm\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","react/jsx-no-undef","'Def' is not defined.","JSXIdentifier","undefined","Parsing error: Identifier 'movies' has already been declared.\n\n\u001b[0m \u001b[90m  6 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m \u001b[36mfunction\u001b[39m \u001b[33mAddReview\u001b[39m({ movies\u001b[33m,\u001b[39m onSubmit }) {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m [movies\u001b[33m,\u001b[39m setMovies] \u001b[33m=\u001b[39m useState([])\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]